version: '3.8'

services:
  core-service:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - DB_HOST=${PGHOST}  # Using PGHOST as DB_HOST
      - PORT=${PORT}
      - DB_PORT=${PGPORT}
      - DB_USER=${PGUSER}  # Using PGUSER
      - DB_PASSWORD=${PGPASSWORD}
      - DB_NAME=${PGDATABASE}  # Using PGDATABASE
      - DB_ADDRESS=${DB_ADDRESS}
      - GATEWAY_SERVICE_PORT=${GATEWAY_SERVICE_PORT}
      - DATABASE_URL=${DATABASE_URL}  # Using the full database URL
      - DATABASE_PUBLIC_URL=${DATABASE_PUBLIC_URL}  # Using the full public database URL
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./cmd:/app/cmd
      - ./entrypoint.sh:/app/core-service/entrypoint.sh
      - ./cmd/migrate/migrations:/app/core-service/cmd/migrate/migrations

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 2s
      retries: 5

volumes:
  postgres_data:
    driver: local
