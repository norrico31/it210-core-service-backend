version: '3.8'

services:
  core-service:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      JWT_SECRET: "${JWT_SECRET}"
      PGHOST: "${RAILWAY_PRIVATE_DOMAIN}"
      PORT: "${PORT}"
      PGPORT: "${PGPORT}"
      PGUSER: "${PGUSER}"
      PGPASSWORD: "${PGPASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      DB_ADDRESS: "${DB_ADDRESS}"
      RAILWAY_PRIVATE_DOMAIN: "${RAILWAY_PRIVATE_DOMAIN}"
      RAILWAY_TCP_PROXY_PORT: "${RAILWAY_TCP_PROXY_PORT}"
      GATEWAY_SERVICE_PORT: "${GATEWAY_SERVICE_PORT}"
      DATABASE_URL: "postgresql://${PGUSER}:${PGPASSWORD}@${RAILWAY_PRIVATE_DOMAIN}:${RAILWAY_TCP_PROXY_PORT}/${POSTGRES_DB}"
      DATABASE_PUBLIC_URL: "postgresql://${PGUSER}:${PGPASSWORD}@${RAILWAY_TCP_PROXY_DOMAIN}:${RAILWAY_TCP_PROXY_PORT}/${POSTGRES_DB}"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./cmd:/app/cmd
      - ./entrypoint.sh:/app/core-service/entrypoint.sh
      - ./cmd/migrate/migrations:/app/core-service/cmd/migrate/migrations

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${PGUSER}"
      POSTGRES_PASSWORD: "${PGPASSWORD}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 2s
      retries: 5

volumes:
  postgres_data:
    driver: local
